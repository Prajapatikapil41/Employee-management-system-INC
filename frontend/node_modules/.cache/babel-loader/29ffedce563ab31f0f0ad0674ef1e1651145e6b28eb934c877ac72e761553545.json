{"ast":null,"code":"// src/api.js\nimport axios from \"axios\";\nexport const BASE = (process.env.REACT_APP_API_BASE || \"http://localhost:4000\") + \"/api\";\nconst client = axios.create({\n  baseURL: BASE,\n  withCredentials: false,\n  timeout: 30000\n});\n\n// helper to unwrap data or throw a normalized error\nasync function unwrap(promise) {\n  try {\n    const res = await promise;\n    return res.data;\n  } catch (err) {\n    var _err$response, _err$response$data, _err$response2, _err$response2$data;\n    // Normalize error object\n    const serverMessage = (err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || (err === null || err === void 0 ? void 0 : (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || (err === null || err === void 0 ? void 0 : err.message);\n    const error = new Error(serverMessage || \"Network error\");\n    error.raw = err;\n    throw error;\n  }\n}\n\n// Events\nexport const addEvent = formData => unwrap(client.post(\"/events\", formData, {\n  headers: {\n    \"Content-Type\": \"multipart/form-data\"\n  }\n}));\nexport const updateEvent = (id, formData) => unwrap(client.post(`/events/${id}/update`, formData, {\n  headers: {\n    \"Content-Type\": \"multipart/form-data\"\n  }\n}));\nexport const listEvents = (type = \"ongoing\") => unwrap(client.get(`/events?type=${encodeURIComponent(type)}`));\nexport const getEvent = id => unwrap(client.get(`/events/${id}`));\nexport const markViewed = (id, userId) => unwrap(client.post(`/events/${id}/view`, {\n  userId\n}));\nexport const getReport = id => unwrap(client.get(`/events/${id}/report`));\nexport const acceptReport = (id, userId) => unwrap(client.post(`/events/${id}/report/accept`, {\n  userId\n}));\n\n// Auth\nexport const login = code => unwrap(client.post(`/auth/login`, {\n  code\n}));","map":{"version":3,"names":["axios","BASE","process","env","REACT_APP_API_BASE","client","create","baseURL","withCredentials","timeout","unwrap","promise","res","data","err","_err$response","_err$response$data","_err$response2","_err$response2$data","serverMessage","response","error","message","Error","raw","addEvent","formData","post","headers","updateEvent","id","listEvents","type","get","encodeURIComponent","getEvent","markViewed","userId","getReport","acceptReport","login","code"],"sources":["D:/AAA/event-management-system/frontend/src/api.js"],"sourcesContent":["// src/api.js\r\nimport axios from \"axios\";\r\n\r\nexport const BASE = (process.env.REACT_APP_API_BASE || \"http://localhost:4000\") + \"/api\";\r\n\r\nconst client = axios.create({\r\n  baseURL: BASE,\r\n  withCredentials: false,\r\n  timeout: 30000,\r\n});\r\n\r\n// helper to unwrap data or throw a normalized error\r\nasync function unwrap(promise) {\r\n  try {\r\n    const res = await promise;\r\n    return res.data;\r\n  } catch (err) {\r\n    // Normalize error object\r\n    const serverMessage =\r\n      err?.response?.data?.error || err?.response?.data?.message || err?.message;\r\n    const error = new Error(serverMessage || \"Network error\");\r\n    error.raw = err;\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Events\r\nexport const addEvent = (formData) =>\r\n  unwrap(client.post(\"/events\", formData, { headers: { \"Content-Type\": \"multipart/form-data\" } }));\r\n\r\nexport const updateEvent = (id, formData) =>\r\n  unwrap(client.post(`/events/${id}/update`, formData, { headers: { \"Content-Type\": \"multipart/form-data\" } }));\r\n\r\nexport const listEvents = (type = \"ongoing\") =>\r\n  unwrap(client.get(`/events?type=${encodeURIComponent(type)}`));\r\n\r\nexport const getEvent = (id) =>\r\n  unwrap(client.get(`/events/${id}`));\r\n\r\nexport const markViewed = (id, userId) =>\r\n  unwrap(client.post(`/events/${id}/view`, { userId }));\r\n\r\nexport const getReport = (id) =>\r\n  unwrap(client.get(`/events/${id}/report`));\r\n\r\nexport const acceptReport = (id, userId) =>\r\n  unwrap(client.post(`/events/${id}/report/accept`, { userId }));\r\n\r\n// Auth\r\nexport const login = (code) =>\r\n  unwrap(client.post(`/auth/login`, { code }));\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,IAAI,GAAG,CAACC,OAAO,CAACC,GAAG,CAACC,kBAAkB,IAAI,uBAAuB,IAAI,MAAM;AAExF,MAAMC,MAAM,GAAGL,KAAK,CAACM,MAAM,CAAC;EAC1BC,OAAO,EAAEN,IAAI;EACbO,eAAe,EAAE,KAAK;EACtBC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACA,eAAeC,MAAMA,CAACC,OAAO,EAAE;EAC7B,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMD,OAAO;IACzB,OAAOC,GAAG,CAACC,IAAI;EACjB,CAAC,CAAC,OAAOC,GAAG,EAAE;IAAA,IAAAC,aAAA,EAAAC,kBAAA,EAAAC,cAAA,EAAAC,mBAAA;IACZ;IACA,MAAMC,aAAa,GACjB,CAAAL,GAAG,aAAHA,GAAG,wBAAAC,aAAA,GAAHD,GAAG,CAAEM,QAAQ,cAAAL,aAAA,wBAAAC,kBAAA,GAAbD,aAAA,CAAeF,IAAI,cAAAG,kBAAA,uBAAnBA,kBAAA,CAAqBK,KAAK,MAAIP,GAAG,aAAHA,GAAG,wBAAAG,cAAA,GAAHH,GAAG,CAAEM,QAAQ,cAAAH,cAAA,wBAAAC,mBAAA,GAAbD,cAAA,CAAeJ,IAAI,cAAAK,mBAAA,uBAAnBA,mBAAA,CAAqBI,OAAO,MAAIR,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEQ,OAAO;IAC5E,MAAMD,KAAK,GAAG,IAAIE,KAAK,CAACJ,aAAa,IAAI,eAAe,CAAC;IACzDE,KAAK,CAACG,GAAG,GAAGV,GAAG;IACf,MAAMO,KAAK;EACb;AACF;;AAEA;AACA,OAAO,MAAMI,QAAQ,GAAIC,QAAQ,IAC/BhB,MAAM,CAACL,MAAM,CAACsB,IAAI,CAAC,SAAS,EAAED,QAAQ,EAAE;EAAEE,OAAO,EAAE;IAAE,cAAc,EAAE;EAAsB;AAAE,CAAC,CAAC,CAAC;AAElG,OAAO,MAAMC,WAAW,GAAGA,CAACC,EAAE,EAAEJ,QAAQ,KACtChB,MAAM,CAACL,MAAM,CAACsB,IAAI,CAAC,WAAWG,EAAE,SAAS,EAAEJ,QAAQ,EAAE;EAAEE,OAAO,EAAE;IAAE,cAAc,EAAE;EAAsB;AAAE,CAAC,CAAC,CAAC;AAE/G,OAAO,MAAMG,UAAU,GAAGA,CAACC,IAAI,GAAG,SAAS,KACzCtB,MAAM,CAACL,MAAM,CAAC4B,GAAG,CAAC,gBAAgBC,kBAAkB,CAACF,IAAI,CAAC,EAAE,CAAC,CAAC;AAEhE,OAAO,MAAMG,QAAQ,GAAIL,EAAE,IACzBpB,MAAM,CAACL,MAAM,CAAC4B,GAAG,CAAC,WAAWH,EAAE,EAAE,CAAC,CAAC;AAErC,OAAO,MAAMM,UAAU,GAAGA,CAACN,EAAE,EAAEO,MAAM,KACnC3B,MAAM,CAACL,MAAM,CAACsB,IAAI,CAAC,WAAWG,EAAE,OAAO,EAAE;EAAEO;AAAO,CAAC,CAAC,CAAC;AAEvD,OAAO,MAAMC,SAAS,GAAIR,EAAE,IAC1BpB,MAAM,CAACL,MAAM,CAAC4B,GAAG,CAAC,WAAWH,EAAE,SAAS,CAAC,CAAC;AAE5C,OAAO,MAAMS,YAAY,GAAGA,CAACT,EAAE,EAAEO,MAAM,KACrC3B,MAAM,CAACL,MAAM,CAACsB,IAAI,CAAC,WAAWG,EAAE,gBAAgB,EAAE;EAAEO;AAAO,CAAC,CAAC,CAAC;;AAEhE;AACA,OAAO,MAAMG,KAAK,GAAIC,IAAI,IACxB/B,MAAM,CAACL,MAAM,CAACsB,IAAI,CAAC,aAAa,EAAE;EAAEc;AAAK,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}