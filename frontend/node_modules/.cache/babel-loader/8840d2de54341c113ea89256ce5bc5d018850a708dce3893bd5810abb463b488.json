{"ast":null,"code":"const BASE = process.env.REACT_APP_API || \"http://localhost:4000/api\";\n\n/*\r\n  Expected backend routes (examples):\r\n  POST   /auth/login         { code } -> { user: { id, name, role }, error? }\r\n  GET    /events?type=ongoing|previous   -> [events]\r\n  GET    /events/:id         -> { event fields }\r\n  POST   /events             (multipart/form-data) -> create event\r\n  POST   /events/:id/update  (multipart/form-data) -> update event\r\n  POST   /events/:id/view    { userId } -> mark viewed\r\n  GET    /events/:id/report  -> report data\r\n*/\n\nasync function handleRes(res) {\n  const json = await res.json().catch(() => ({}));\n  if (!res.ok && json && json.error) return {\n    error: json.error\n  };\n  return json;\n}\nexport async function login(code) {\n  const res = await fetch(BASE + \"/auth/login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      code\n    })\n  });\n  return handleRes(res);\n}\nexport async function listEvents(type = \"ongoing\") {\n  const res = await fetch(BASE + \"/events?type=\" + encodeURIComponent(type));\n  return handleRes(res);\n}\nexport async function getEvent(id) {\n  const res = await fetch(BASE + \"/events/\" + encodeURIComponent(id));\n  return handleRes(res);\n}\nexport async function markViewed(id, userId) {\n  const res = await fetch(BASE + `/events/${encodeURIComponent(id)}/view`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      userId\n    })\n  });\n  return handleRes(res);\n}\nexport async function addEvent(formData) {\n  const res = await fetch(BASE + \"/events\", {\n    method: \"POST\",\n    body: formData // FormData\n  });\n  return handleRes(res);\n}\nexport async function updateEvent(id, formData) {\n  const res = await fetch(BASE + `/events/${encodeURIComponent(id)}/update`, {\n    method: \"POST\",\n    body: formData\n  });\n  return handleRes(res);\n}\nexport async function getReport(id) {\n  const res = await fetch(BASE + `/events/${encodeURIComponent(id)}/report`);\n  return handleRes(res);\n}","map":{"version":3,"names":["BASE","process","env","REACT_APP_API","handleRes","res","json","catch","ok","error","login","code","fetch","method","headers","body","JSON","stringify","listEvents","type","encodeURIComponent","getEvent","id","markViewed","userId","addEvent","formData","updateEvent","getReport"],"sources":["D:/Job Project/frontend/src/api.js"],"sourcesContent":["const BASE = process.env.REACT_APP_API || \"http://localhost:4000/api\";\r\n\r\n/*\r\n  Expected backend routes (examples):\r\n  POST   /auth/login         { code } -> { user: { id, name, role }, error? }\r\n  GET    /events?type=ongoing|previous   -> [events]\r\n  GET    /events/:id         -> { event fields }\r\n  POST   /events             (multipart/form-data) -> create event\r\n  POST   /events/:id/update  (multipart/form-data) -> update event\r\n  POST   /events/:id/view    { userId } -> mark viewed\r\n  GET    /events/:id/report  -> report data\r\n*/\r\n\r\nasync function handleRes(res) {\r\n  const json = await res.json().catch(() => ({}));\r\n  if (!res.ok && json && json.error) return { error: json.error };\r\n  return json;\r\n}\r\n\r\nexport async function login(code) {\r\n  const res = await fetch(BASE + \"/auth/login\", {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ code }),\r\n  });\r\n  return handleRes(res);\r\n}\r\n\r\nexport async function listEvents(type = \"ongoing\") {\r\n  const res = await fetch(BASE + \"/events?type=\" + encodeURIComponent(type));\r\n  return handleRes(res);\r\n}\r\n\r\nexport async function getEvent(id) {\r\n  const res = await fetch(BASE + \"/events/\" + encodeURIComponent(id));\r\n  return handleRes(res);\r\n}\r\n\r\nexport async function markViewed(id, userId) {\r\n  const res = await fetch(BASE + `/events/${encodeURIComponent(id)}/view`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ userId }),\r\n  });\r\n  return handleRes(res);\r\n}\r\n\r\nexport async function addEvent(formData) {\r\n  const res = await fetch(BASE + \"/events\", {\r\n    method: \"POST\",\r\n    body: formData, // FormData\r\n  });\r\n  return handleRes(res);\r\n}\r\n\r\nexport async function updateEvent(id, formData) {\r\n  const res = await fetch(BASE + `/events/${encodeURIComponent(id)}/update`, {\r\n    method: \"POST\",\r\n    body: formData,\r\n  });\r\n  return handleRes(res);\r\n}\r\n\r\nexport async function getReport(id) {\r\n  const res = await fetch(BASE + `/events/${encodeURIComponent(id)}/report`);\r\n  return handleRes(res);\r\n}"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACC,aAAa,IAAI,2BAA2B;;AAErE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeC,SAASA,CAACC,GAAG,EAAE;EAC5B,MAAMC,IAAI,GAAG,MAAMD,GAAG,CAACC,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;EAC/C,IAAI,CAACF,GAAG,CAACG,EAAE,IAAIF,IAAI,IAAIA,IAAI,CAACG,KAAK,EAAE,OAAO;IAAEA,KAAK,EAAEH,IAAI,CAACG;EAAM,CAAC;EAC/D,OAAOH,IAAI;AACb;AAEA,OAAO,eAAeI,KAAKA,CAACC,IAAI,EAAE;EAChC,MAAMN,GAAG,GAAG,MAAMO,KAAK,CAACZ,IAAI,GAAG,aAAa,EAAE;IAC5Ca,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEN;IAAK,CAAC;EAC/B,CAAC,CAAC;EACF,OAAOP,SAAS,CAACC,GAAG,CAAC;AACvB;AAEA,OAAO,eAAea,UAAUA,CAACC,IAAI,GAAG,SAAS,EAAE;EACjD,MAAMd,GAAG,GAAG,MAAMO,KAAK,CAACZ,IAAI,GAAG,eAAe,GAAGoB,kBAAkB,CAACD,IAAI,CAAC,CAAC;EAC1E,OAAOf,SAAS,CAACC,GAAG,CAAC;AACvB;AAEA,OAAO,eAAegB,QAAQA,CAACC,EAAE,EAAE;EACjC,MAAMjB,GAAG,GAAG,MAAMO,KAAK,CAACZ,IAAI,GAAG,UAAU,GAAGoB,kBAAkB,CAACE,EAAE,CAAC,CAAC;EACnE,OAAOlB,SAAS,CAACC,GAAG,CAAC;AACvB;AAEA,OAAO,eAAekB,UAAUA,CAACD,EAAE,EAAEE,MAAM,EAAE;EAC3C,MAAMnB,GAAG,GAAG,MAAMO,KAAK,CAACZ,IAAI,GAAG,WAAWoB,kBAAkB,CAACE,EAAE,CAAC,OAAO,EAAE;IACvET,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEO;IAAO,CAAC;EACjC,CAAC,CAAC;EACF,OAAOpB,SAAS,CAACC,GAAG,CAAC;AACvB;AAEA,OAAO,eAAeoB,QAAQA,CAACC,QAAQ,EAAE;EACvC,MAAMrB,GAAG,GAAG,MAAMO,KAAK,CAACZ,IAAI,GAAG,SAAS,EAAE;IACxCa,MAAM,EAAE,MAAM;IACdE,IAAI,EAAEW,QAAQ,CAAE;EAClB,CAAC,CAAC;EACF,OAAOtB,SAAS,CAACC,GAAG,CAAC;AACvB;AAEA,OAAO,eAAesB,WAAWA,CAACL,EAAE,EAAEI,QAAQ,EAAE;EAC9C,MAAMrB,GAAG,GAAG,MAAMO,KAAK,CAACZ,IAAI,GAAG,WAAWoB,kBAAkB,CAACE,EAAE,CAAC,SAAS,EAAE;IACzET,MAAM,EAAE,MAAM;IACdE,IAAI,EAAEW;EACR,CAAC,CAAC;EACF,OAAOtB,SAAS,CAACC,GAAG,CAAC;AACvB;AAEA,OAAO,eAAeuB,SAASA,CAACN,EAAE,EAAE;EAClC,MAAMjB,GAAG,GAAG,MAAMO,KAAK,CAACZ,IAAI,GAAG,WAAWoB,kBAAkB,CAACE,EAAE,CAAC,SAAS,CAAC;EAC1E,OAAOlB,SAAS,CAACC,GAAG,CAAC;AACvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}