{"ast":null,"code":"// frontend/src/api.js\nexport const BASE = process.env.REACT_APP_API || \"http://localhost:4000/api\";\nasync function handleRes(res) {\n  let json = {};\n  try {\n    json = await res.json();\n  } catch {\n    json = null;\n  }\n\n  // If backend returns structured { success: true/false, data, error }\n  if (json && typeof json === \"object\" && \"success\" in json) {\n    if (json.success) {\n      // Prefer data if present\n      return json.data !== undefined ? json.data : json;\n    } else {\n      return {\n        error: json.error || json.message || \"सर्वर त्रुटि\"\n      };\n    }\n  }\n\n  // Fallback: status-based handling\n  if (!res.ok) {\n    return {\n      error: json && (json.error || json.message) || `HTTP ${res.status}`\n    };\n  }\n  return json;\n}\nasync function safeFetch(url, options) {\n  try {\n    const res = await fetch(url, options);\n    return await handleRes(res);\n  } catch (err) {\n    console.error(\"Network/API error:\", err);\n    return {\n      error: \"नेटवर्क त्रुटि। सर्वर से संपर्क नहीं हो सका।\"\n    };\n  }\n}\nexport async function login(code) {\n  return safeFetch(BASE + \"/auth/login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      code\n    })\n  });\n}\nexport async function listEvents(type = \"ongoing\") {\n  return safeFetch(BASE + \"/events?type=\" + encodeURIComponent(type));\n}\nexport async function getEvent(id) {\n  return safeFetch(BASE + \"/events/\" + encodeURIComponent(id));\n}\nexport async function markViewed(id, userId) {\n  return safeFetch(BASE + `/events/${encodeURIComponent(id)}/view`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      userId\n    })\n  });\n}\nexport async function addEvent(formData) {\n  return safeFetch(BASE + \"/events\", {\n    method: \"POST\",\n    body: formData // FormData; DO NOT set Content-Type so browser adds boundary\n  });\n}\nexport async function updateEvent(id, formData) {\n  return safeFetch(BASE + `/events/${encodeURIComponent(id)}/update`, {\n    method: \"POST\",\n    body: formData\n  });\n}\nexport async function getReport(id) {\n  return safeFetch(BASE + `/events/${encodeURIComponent(id)}/report`);\n}\nexport async function acceptReport(eventId, userId) {\n  return safeFetch(BASE + `/events/${encodeURIComponent(eventId)}/report/accept`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      userId\n    })\n  });\n}\nexport async function deleteEvent(id) {\n  return safeFetch(BASE + `/events/${encodeURIComponent(id)}`, {\n    method: \"DELETE\"\n  });\n}\n\n// Additional helper: fetch jila users list (for admin created_by dropdown)\nexport async function getJilaUsers() {\n  return safeFetch(BASE + \"/auth/users/jila\");\n}","map":{"version":3,"names":["BASE","process","env","REACT_APP_API","handleRes","res","json","success","data","undefined","error","message","ok","status","safeFetch","url","options","fetch","err","console","login","code","method","headers","body","JSON","stringify","listEvents","type","encodeURIComponent","getEvent","id","markViewed","userId","addEvent","formData","updateEvent","getReport","acceptReport","eventId","deleteEvent","getJilaUsers"],"sources":["D:/event-management-system/frontend/src/api.js"],"sourcesContent":["// frontend/src/api.js\r\nexport const BASE = process.env.REACT_APP_API || \"http://localhost:4000/api\";\r\n\r\nasync function handleRes(res) {\r\n  let json = {};\r\n  try {\r\n    json = await res.json();\r\n  } catch {\r\n    json = null;\r\n  }\r\n\r\n  // If backend returns structured { success: true/false, data, error }\r\n  if (json && typeof json === \"object\" && (\"success\" in json)) {\r\n    if (json.success) {\r\n      // Prefer data if present\r\n      return json.data !== undefined ? json.data : json;\r\n    } else {\r\n      return { error: json.error || json.message || \"सर्वर त्रुटि\" };\r\n    }\r\n  }\r\n\r\n  // Fallback: status-based handling\r\n  if (!res.ok) {\r\n    return { error: (json && (json.error || json.message)) || `HTTP ${res.status}` };\r\n  }\r\n  return json;\r\n}\r\n\r\nasync function safeFetch(url, options) {\r\n  try {\r\n    const res = await fetch(url, options);\r\n    return await handleRes(res);\r\n  } catch (err) {\r\n    console.error(\"Network/API error:\", err);\r\n    return { error: \"नेटवर्क त्रुटि। सर्वर से संपर्क नहीं हो सका।\" };\r\n  }\r\n}\r\n\r\nexport async function login(code) {\r\n  return safeFetch(BASE + \"/auth/login\", {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ code }),\r\n  });\r\n}\r\n\r\nexport async function listEvents(type = \"ongoing\") {\r\n  return safeFetch(BASE + \"/events?type=\" + encodeURIComponent(type));\r\n}\r\n\r\nexport async function getEvent(id) {\r\n  return safeFetch(BASE + \"/events/\" + encodeURIComponent(id));\r\n}\r\n\r\nexport async function markViewed(id, userId) {\r\n  return safeFetch(BASE + `/events/${encodeURIComponent(id)}/view`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ userId }),\r\n  });\r\n}\r\n\r\nexport async function addEvent(formData) {\r\n  return safeFetch(BASE + \"/events\", {\r\n    method: \"POST\",\r\n    body: formData, // FormData; DO NOT set Content-Type so browser adds boundary\r\n  });\r\n}\r\n\r\nexport async function updateEvent(id, formData) {\r\n  return safeFetch(BASE + `/events/${encodeURIComponent(id)}/update`, {\r\n    method: \"POST\",\r\n    body: formData,\r\n  });\r\n}\r\n\r\nexport async function getReport(id) {\r\n  return safeFetch(BASE + `/events/${encodeURIComponent(id)}/report`);\r\n}\r\n\r\nexport async function acceptReport(eventId, userId) {\r\n  return safeFetch(BASE + `/events/${encodeURIComponent(eventId)}/report/accept`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ userId }),\r\n  });\r\n}\r\n\r\nexport async function deleteEvent(id) {\r\n  return safeFetch(BASE + `/events/${encodeURIComponent(id)}`, {\r\n    method: \"DELETE\",\r\n  });\r\n}\r\n\r\n// Additional helper: fetch jila users list (for admin created_by dropdown)\r\nexport async function getJilaUsers() {\r\n  return safeFetch(BASE + \"/auth/users/jila\");\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}