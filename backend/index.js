import express from "express";
import cors from "cors";
import dotenv from "dotenv";
import fs from "fs";
import path from "path";
import { fileURLToPath } from "url";
import pool from "./db.js";

import authRoutes from "./routes/auth.js";
import eventRoutes from "./routes/events.js";

dotenv.config();

const app = express();

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

app.use(cors());
app.use(express.json({ limit: "20mb" }));
app.use(express.urlencoded({ extended: true, limit: "20mb" }));

const UPLOAD_DIR_NAME = process.env.UPLOAD_DIR || "uploads";
const UPLOAD_DIR = path.join(__dirname, UPLOAD_DIR_NAME);
if (!fs.existsSync(UPLOAD_DIR)) {
  fs.mkdirSync(UPLOAD_DIR, { recursive: true });
  console.log(`ЁЯУБ Uploads рдбрд╛рдпрд░реЗрдХреНрдЯрд░реА рдмрдирд╛рдИ рдЧрдИ: ${UPLOAD_DIR}`);
}
app.use("/uploads", express.static(UPLOAD_DIR));

app.use("/api/auth", authRoutes);
app.use("/api/events", eventRoutes);

app.get("/", (req, res) => {
  res.send("тЬЕ INC рдЗрд╡реЗрдВрдЯ рдореИрдиреЗрдЬрдореЗрдВрдЯ рд╕рд░реНрд╡рд░ рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рдЪрд▓ рд░рд╣рд╛ рд╣реИ!");
});

app.use((req, res) => {
  res.status(404).json({ error: "API Endpoint рдирд╣реАрдВ рдорд┐рд▓рд╛" });
});

app.use((err, req, res, next) => {
  console.error("тЭМ рдЕрдкреНрд░рддреНрдпрд╛рд╢рд┐рдд рд╕рд░реНрд╡рд░ рддреНрд░реБрдЯрд┐:", err);
  res.status(500).json({ error: "рд╕рд░реНрд╡рд░ рдореЗрдВ рдЕрдкреНрд░рддреНрдпрд╛рд╢рд┐рдд рддреНрд░реБрдЯрд┐ рд╣реБрдИ" });
});

const PORT = process.env.PORT || 4000;

app.listen(PORT, async () => {
  console.log(`ЁЯЪА рд╕рд░реНрд╡рд░ рдкреЛрд░реНрдЯ ${PORT} рдкрд░ рдЪрд▓ рд░рд╣рд╛ рд╣реИ`);

  try {
    const conn = await pool.getConnection();
    console.log("тЬЕ рдбреЗрдЯрд╛рдмреЗрд╕ рдХрдиреЗрдХреНрд╢рди рд╕рддреНрдпрд╛рдкрд┐рдд");
    conn.release();
  } catch (dbErr) {
    console.error("тЪая╕П рдбреЗрдЯрд╛рдмреЗрд╕ рдХрдиреЗрдХреНрд╢рди рд╡рд┐рдлрд▓:", dbErr.message);
  }
});
